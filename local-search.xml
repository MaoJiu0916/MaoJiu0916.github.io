<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Appium学习笔记</title>
    <link href="/2022/03/22/Appium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/03/22/Appium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;platformName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Android&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;platformVersion&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;10&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;deviceName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xxx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;appPackage&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tv.danmaku.bili&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;appActivity&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;.MainActivityV2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;unicodeKeyboard&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;resetKeyboard&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;noReset&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;newCommandTimeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">6000</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;automationName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UiAutomator2&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;platformName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Android&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;platformVersion&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;10&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;deviceName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xxx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;appPackage&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.tencent.mm&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;appActivity&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;.ui.LauncherUI&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;unicodeKeyboard&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">false</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;resetKeyboard&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;noReset&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-keyword">true</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;newCommandTimeout&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">6000</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;automationName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UiAutomator2&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">adb shell dumpsys activity recents | find &quot;intent=&#123;&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>【Python项目实战】HITsz每日健康自动上报</title>
    <link href="/2022/03/22/%E3%80%90Python%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%E3%80%91HITsz%E6%AF%8F%E6%97%A5%E5%81%A5%E5%BA%B7%E8%87%AA%E5%8A%A8%E4%B8%8A%E6%8A%A5/"/>
    <url>/2022/03/22/%E3%80%90Python%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98%E3%80%91HITsz%E6%AF%8F%E6%97%A5%E5%81%A5%E5%BA%B7%E8%87%AA%E5%8A%A8%E4%B8%8A%E6%8A%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="【Python项目实战】HITsz每日健康自动上报"><a href="#【Python项目实战】HITsz每日健康自动上报" class="headerlink" title="【Python项目实战】HITsz每日健康自动上报"></a>【Python项目实战】HITsz每日健康自动上报</h1><h2 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h2><table><thead><tr><th align="center">windows版本</th><th align="center">windows 10</th></tr></thead><tbody><tr><td align="center"><strong>浏览器版本</strong></td><td align="center">Microsoft Edge  99.0.1150.46 （64位）</td></tr><tr><td align="center"><strong>浏览器驱动版本</strong></td><td align="center"><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/">https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/</a></td></tr><tr><td align="center"><strong>Python版本</strong></td><td align="center">Python 3.8.12</td></tr><tr><td align="center"><strong>selenium版本</strong></td><td align="center">selenium 4.0.0</td></tr></tbody></table><h2 id="二、HITszDailyReport-函数"><a href="#二、HITszDailyReport-函数" class="headerlink" title="二、HITszDailyReport()函数"></a>二、HITszDailyReport()函数</h2><p>HITsz每日疫情健康上报的网址为：<a href="https://student.hitsz.edu.cn/xg_mobile/loginChange%EF%BC%8C%E9%80%89%E6%8B%A9%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E7%99%BB%E5%BD%95%E4%BC%9A%E8%BF%9B%E8%A1%8C%E8%B7%B3%E8%BD%AC%EF%BC%8C%E8%BE%93%E5%85%A5%E5%AD%A6%E5%8F%B7%E5%92%8C%E5%AF%86%E7%A0%81%E8%BF%9B%E5%85%A5%E4%B8%8B%E4%B8%80%E7%95%8C%E9%9D%A2%E5%B0%B1%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E4%B8%8A%E6%8A%A5%E2%80%A6%E2%80%A6">https://student.hitsz.edu.cn/xg_mobile/loginChange，选择统一身份认证登录会进行跳转，输入学号和密码进入下一界面就可以进行上报……</a></p><p>下面对函数的各个部分进行简要说明：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username = <span class="string">&quot;111111111&quot;</span>  <span class="comment"># 统一身份认证的学号</span></span><br><span class="line">password = <span class="string">&quot;*************&quot;</span>  <span class="comment"># 统一身份认证的密码</span></span><br><span class="line">url = <span class="string">&quot;https://student.hitsz.edu.cn/xg_mobile/loginChange&quot;</span></span><br></pre></td></tr></table></figure><p>指定webdriver的一些参数，设置<strong>隐式等待时间</strong>等。</p><blockquote><p>大多数Web应用程序都是使用Ajax和Javascript开发的。当浏览器加载页面时，我们想要与之交互的元素可能以不同的时间间隔加载。隐式等待将告诉Web驱动程序在抛出“No Such Element Exception”之前等待一定的时间。Web驱动程序将在抛出异常之前等待该时间。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">option = webdriver.EdgeOptions()</span><br><span class="line">option.add_argument(<span class="string">&#x27;window-size=1920x3000&#x27;</span>)  <span class="comment"># 指定浏览器分辨率</span></span><br><span class="line">option.add_argument(<span class="string">&#x27;--disable-gpu&#x27;</span>)</span><br><span class="line">option.add_argument(<span class="string">&#x27;--hide-scrollbars&#x27;</span>)  <span class="comment"># 隐藏滚动条, 应对一些特殊页面</span></span><br><span class="line"></span><br><span class="line">web = webdriver.Edge(options=option)</span><br><span class="line">web.maximize_window()</span><br><span class="line">web.implicitly_wait(<span class="number">30</span>)</span><br><span class="line">web.get(url)</span><br></pre></td></tr></table></figure><p>定位元素，主要采用了根据class属性，ID属性和Xpath进行选择元素的方式，以定位其中一个元素为例：</p><p>进入需要定位的网页，<strong>右键-&gt;检查（或者F12)</strong>,</p><p><img src="https://s3.bmp.ovh/imgs/2022/03/be73fd523fb1babc.png"></p><p>可以看到需要点击的元素的class属性是<strong>“part_action_left”</strong>，选择并进行点击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web.find_element(By.CLASS_NAME, <span class="string">&quot;part_action_left&quot;</span>).click()</span><br></pre></td></tr></table></figure><p>HITszDailyReport()函数操作元素的全部代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">web.find_element(By.CLASS_NAME, <span class="string">&quot;ty_btn&quot;</span>).click()</span><br><span class="line">web.find_element(By.CLASS_NAME, <span class="string">&quot;login_box_inputuser&quot;</span>).send_keys(username)</span><br><span class="line">web.find_element(By.CLASS_NAME, <span class="string">&quot;login_box_inputpassword&quot;</span>).send_keys(password)</span><br><span class="line">web.find_element(By.CLASS_NAME, <span class="string">&quot;login_box_landing_btn&quot;</span>).click()</span><br><span class="line">web.find_element(By.CLASS_NAME, <span class="string">&quot;part_action_left&quot;</span>).click()</span><br><span class="line">web.find_element(By.ID, <span class="string">&quot;dtjwd&quot;</span>).click()</span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line">commit1 = web.find_element(By.XPATH, <span class="string">&quot;/html/body/div[2]/div[2]/div[2]/div/div/div[1]/div[62]/label&quot;</span>)</span><br><span class="line">webdriver.ActionChains(web).move_to_element(commit1).click(commit1).perform()</span><br><span class="line">web.find_element(By.XPATH, <span class="string">&quot;/html/body/div[2]/div[2]/div[2]/div/div/div[1]/div[63]/div/div&quot;</span>).click()</span><br></pre></td></tr></table></figure><p>Python的代码已完成，运行程序，可以成功进行每日上报……</p><h2 id="三、定时运行"><a href="#三、定时运行" class="headerlink" title="三、定时运行"></a>三、定时运行</h2><p>上面的程序虽然可以进行上报，但仍然需要每天进行点击运行，而且对电脑上未安装python环境的同学来说很不友好，实现定时上报的方法有很多种，</p><ul><li>Python的time库，schedule库，apscheduler库</li><li>windows的任务计划程序，linux的crontab</li><li>Github flow</li><li>……</li></ul><p>这里采用Windows的任务计划程序来定时执行，首先将python文件打包成exe可执行文件，</p><p>在cmd命令行下输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;pyinstaller main.py</span><br></pre></td></tr></table></figure><p>其中main.py是包含HITszDailyReport()函数的python文件。</p><blockquote><p>这里没有GUI界面，所以不需要设置pyinstaller的参数</p><p>进入**./dist/main**文件夹，就可以看到打包生成好的exe文件</p></blockquote><p><strong>1.Win+S</strong>打开任务计划程序，创建任务，输入任务名称和任务描述<br><img src="https://s3.bmp.ovh/imgs/2022/03/4c024734c9678cf1.png"></p><p>2.新建触发器，设置触发方式，触发事件并启用任务</p><p><img src="https://s3.bmp.ovh/imgs/2022/03/5ee44325317b2dea.png"></p><p>3.新建操作，设置操作为<strong>启动程序或脚本</strong>，打开刚才打包好的exe文件并确定。</p><p><img src="https://s3.bmp.ovh/imgs/2022/03/e36898c1837c665a.png"></p><p>以上就完成了定时程序的运行，在电脑开机的状态下就可以自动完成每日上报了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>myFirstArticle</title>
    <link href="/2022/02/19/Hexo/"/>
    <url>/2022/02/19/Hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="一、什么是Hexo"><a href="#一、什么是Hexo" class="headerlink" title="一、什么是Hexo"></a>一、什么是Hexo</h1><p>用Hexo官网的介绍(<a href="https://hexo.io/zh-cn/docs/)%EF%BC%8CHexo%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E6%8D%B7%E4%B8%94%E9%AB%98%E6%95%88%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E3%80%82Hexo%E4%BD%BF%E7%94%A8Markdown%E8%A7%A3%E6%9E%90%E6%96%87%E7%AB%A0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%9C%A8%E5%BE%88%E7%9F%AD%E7%9A%84%E6%97%B6%E9%97%B4%E5%86%85%E7%94%9F%E6%88%90%E9%9D%99%E6%80%81%E7%BD%91%E9%A1%B5%E3%80%82">https://hexo.io/zh-cn/docs/)，Hexo是一个快速、简捷且高效的博客框架。Hexo使用Markdown解析文章，可以在很短的时间内生成静态网页。</a></p><h1 id="二、快速构建Hexo"><a href="#二、快速构建Hexo" class="headerlink" title="二、快速构建Hexo"></a>二、快速构建Hexo</h1><p>安装Hexo之前需要先安装Node.js和Git,如果电脑中尚未安装，请自行查询并进行安装。</p><p>如图所示，即为安装成功。<br><img src="/Pic/Hexo/version.png"></p><p>安装Hexo:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure><p>安装Hexo完成后，执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">hexo init myFirstHexo <span class="comment">#创建并初始化项目</span></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash"><span class="built_in">cd</span> myFirstHexo</span> </span><br><span class="line"><span class="meta">$ </span><span class="language-bash">npm install <span class="comment">#安装依赖</span></span> </span><br></pre></td></tr></table></figure><p>文件夹下的目录和文件如下：</p><table><thead><tr><th align="center">文件/目录</th><th align="center">内容</th></tr></thead><tbody><tr><td align="center">_config.yml</td><td align="center">网站配置文件</td></tr><tr><td align="center">package.json</td><td align="center">应用程序的信息</td></tr><tr><td align="center">scaffolds</td><td align="center">模板文件夹</td></tr><tr><td align="center">source</td><td align="center">模板文件夹</td></tr><tr><td align="center">themes</td><td align="center">主题文件夹</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">hexo new myFirstSrticle  <span class="comment">#新建一篇文章</span></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">hexo g <span class="comment">#生成静态文件</span></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">hexo s <span class="comment">#启动服务器。默认情况下，访问的是本地的端口，http://localhost:4000/</span></span></span><br></pre></td></tr></table></figure><p>浏览器打开<a href="http://localhost:4000/%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%94%9F%E6%88%90%E7%9A%84%E7%BD%91%E7%AB%99%E3%80%82">http://localhost:4000/，就可以看到生成的网站。</a></p><p><img src="E:\HolidayAfter\testHexo0219\source_posts\Pic\Hexo\localhost.png"></p><h1 id="三、部署到Github-Pages"><a href="#三、部署到Github-Pages" class="headerlink" title="三、部署到Github Pages"></a>三、部署到Github Pages</h1><h2 id="1-创建Repository"><a href="#1-创建Repository" class="headerlink" title="1.创建Repository"></a>1.创建Repository</h2><p>在github中创建一个repository,创建的格式为：</p><blockquote><p>&lt;github用户名&gt;.github.io</p></blockquote><p>如图所示：</p><p><img src="E:\HolidayAfter\testHexo0219\source_posts\Pic\Hexo\reopsitory.png"></p><p><em>(由于笔者之前创建过，所以显示仓库已存在)</em></p><h2 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2.修改配置文件"></a>2.修改配置文件</h2><p>打开**_config.yml**文件，添加如下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:MaoJiu0916/MaoJiu0916.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p> repo后面的内容为刚才创建仓库的地址，一般有两种形式：</p><blockquote><p><a href="https://github.com/MaoJiu0916/MaoJiu0916.github.io.git">https://github.com/MaoJiu0916/MaoJiu0916.github.io.git</a></p></blockquote><p>或者</p><blockquote><p><a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#109;">&#103;&#x69;&#x74;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#46;&#x63;&#x6f;&#109;</a>:MaoJiu0916/MaoJiu0916.github.io.git</p></blockquote><p>这里笔者推荐第二种,由于github是国外的网站,所以使用第一种访问起来比较慢,部署可能会不成功.但是使用第二种时需要配置SSH密钥,可以自行查询解决.</p><h2 id="3-一键部署"><a href="#3-一键部署" class="headerlink" title="3.一键部署"></a>3.一键部署</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$ </span><span class="language-bash">npm install hexo-deployer-git --save <span class="comment">#安装插件</span></span></span><br><span class="line"><span class="meta">$ </span><span class="language-bash">hexo d <span class="comment">#一键部署</span></span></span><br></pre></td></tr></table></figure><p>打开(<a href="https://maojiu0916.github.io/)%E6%9F%A5%E7%9C%8B%E6%95%88%E6%9E%9C,%E5%A6%82%E5%9B%BE%E6%89%80%E7%A4%BA">https://maojiu0916.github.io/)查看效果,如图所示</a>:</p><p><em>(因为使用Github Pages部署的,所以加载比较慢,稍等片刻就好)</em></p><p><img src="E:\HolidayAfter\testHexo0219\source_posts\Pic\Hexo\maojiuio.png"></p><p><img src="https://postimg.cc/9zsnvBjZ" alt="Snipaste-2022-02-20-18-04-52.png"></p><p><a href="https://postimg.cc/9zsnvBjZ"><img src="https://i.postimg.cc/3JwQ0LSS/Snipaste-2022-02-20-18-04-52.png" alt="Snipaste-2022-02-20-18-04-52.png"></a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/02/19/hello-world/"/>
    <url>/2022/02/19/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
